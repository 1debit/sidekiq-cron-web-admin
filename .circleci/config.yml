# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2

orbs:
  slack: circleci/slack@3.4.2

defaults: &defaults
  docker:
    - image: circleci/ruby:2-node
  environment:
    PROJECT_NAME: sidekiq-cron-web-admin
jobs:
  secrets_scan_patterns:
    docker: 
      - image: 'circleci/python:latest'
    environment:
      CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Trufflehog Secrets Scan Patterns 
          command: |
            # Clone Patterns
            git clone https://1debitops:$GITHUB_TOKEN@github.com/1debit/infosec-secrets-patterns.git /tmp/infosec-secrets-patterns
            
            # Install Trufflehog
            sudo pip install trufflehog
            
            # Run Trufflehog scan
            trufflehog --rules /tmp/infosec-secrets-patterns/regexes.json --entropy=False --max_depth 1 ~/repo
      - run:
          name: Slack Notification on Build Failed
          when: on_fail
          command: |
            curl -X POST --data-urlencode "payload={\"channel\": \"#infosec-github-secrets\", \"username\": \"webhookbot\", \"text\": \"*Trufflehog Secrets Scan Patterns:*\n CircleCI Project: $CIRCLE_PROJECT_REPONAME\n CircleCi Build URL: $CIRCLE_BUILD_URL\n Github Comparing Changes: $CIRCLE_COMPARE_URL\n Github Pull Request (if already exists): $CIRCLE_PULL_REQUEST\", \"icon_emoji\": \":ghost:\"}" $SLACK_WEBHOOK
           
  secrets_scan_entropy:
    docker: 
      - image: 'circleci/python:latest'
    environment:
      CIRCLE_COMPARE_URL: << pipeline.project.git_url >>/compare/<< pipeline.git.base_revision >>..<<pipeline.git.revision>>
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Entropy Trufflehog Scan
          command: |
            # Install Trufflehog
            sudo pip install trufflehog
            
            # Run Trufflehog scan
            trufflehog --max_depth 1 ~/repo
      - run:
          name: Slack Notification on Build Failed
          when: on_fail
          command: |
            curl -X POST --data-urlencode "payload={\"channel\": \"#infosec-github-secrets\", \"username\": \"webhookbot\", \"text\": \"*Trufflehog Secrets Scan Entropy:*\n CircleCI Project: $CIRCLE_PROJECT_REPONAME\n CircleCi Build URL: $CIRCLE_BUILD_URL\n Github Comparing Changes: $CIRCLE_COMPARE_URL\n Github Pull Request (if already exists): $CIRCLE_PULL_REQUEST\", \"icon_emoji\": \":ghost:\"}" $SLACK_WEBHOOK

  env:
    docker:
      - image: chimeimagebuilder/ci
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - run: make -f ~/Makefile ci-env
      - persist_to_workspace:
          name: Environment Variables
          root: .
          paths:
            - .bash_env
            - .docker_env
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run: cat workspace/.bash_env >> $BASH_ENV
      - setup_remote_docker:
          # docker_layer_caching: true # Cost Extra Per Project, Requires Approval
      - run:
          name: "Prepare"
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            docker pull chimebank/$PROJECT_NAME:$DOCKER_BRANCH || true
      - run:
          name: "Build"
          command: |
            docker build \
              --build-arg BUNDLE_GITHUB__COM="${GITHUB_TOKEN}:x-oauth-basic" \
              --build-arg BUNDLE_GEM__FURY__IO="$GEMFURY_TOKEN" \
              --build-arg GIT_BRANCH="$CIRCLE_BRANCH" \
              --build-arg GIT_COMMIT_SHA="$CIRCLE_SHA1" \
              --build-arg GIT_COMMITTED_AT=$(git log -1 --pretty=format:%ct) \
              --tag chimebank/$PROJECT_NAME:$CIRCLE_SHA1 \
              .
      - run:
          name: "Push"
          command: |
            docker push chimebank/$PROJECT_NAME:$CIRCLE_SHA1
            docker tag chimebank/$PROJECT_NAME:$CIRCLE_SHA1 chimebank/$PROJECT_NAME:$CIRCLE_JOB
            docker push chimebank/$PROJECT_NAME:$CIRCLE_JOB
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: workspace
      - run: cat workspace/.bash_env >> $BASH_ENV
      - setup_remote_docker:
          # docker_layer_caching: true # Cost Extra Per Project, Requires Approval
      - run:
          name: "Prepare"
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            docker pull chimebank/$PROJECT_NAME:$CIRCLE_SHA1
      - run:
          name: "Test"
          command: |
            docker run \
              -e CI -e CIRCLECI -e CIRCLE_BUILD_NUM -e CIRCLE_BRANCH -e CIRCLE_SHA1 -e CC_TEST_REPORTER_ID \
              --env-file workspace/.docker_env \
              chimebank/$PROJECT_NAME:$CIRCLE_SHA1 ./bin/test
      - run:
          name: "Publish"
          command: |
            docker tag chimebank/$PROJECT_NAME:$CIRCLE_SHA1 chimebank/$PROJECT_NAME:$DOCKER_BRANCH
            docker push chimebank/$PROJECT_NAME:$DOCKER_BRANCH
  tag:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run: cat workspace/.bash_env >> $BASH_ENV
      - run:
          name: "Tag"
          command: |
            VERSION=$(cat lib/sidekiq/cron/web/admin/version.rb | grep VERSION | sed "s/.*'\(.*\)'.*/\1/")
            if [ $(git tag -l "v$VERSION") ]; then echo "Pre existing Tag v$VERSION"; exit 1; fi

            git config --global user.email "chime@users.noreply.github.com"
            git config --global user.name "Chime Bot"
            git tag -a v$VERSION -m "v$VERSION"
            git push https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git v$VERSION
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: workspace
      - run: cat workspace/.bash_env >> $BASH_ENV
      - setup_remote_docker:
          # docker_layer_caching: true # Cost Extra Per Project, Requires Approval
      - run:
          name: "Prepare"
          command: |
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            docker pull chimebank/$PROJECT_NAME:$CIRCLE_SHA1
      - run:
          name: "Publish"
          command: |
            docker run \
              -e CI -e CIRCLECI -e CIRCLE_BUILD_NUM -e CIRCLE_BRANCH -e CIRCLE_SHA1 -e CC_TEST_REPORTER_ID \
              -e CIRCLE_PROJECT_USERNAME -e CIRCLE_PROJECT_REPONAME \
              --env-file workspace/.docker_env \
              chimebank/$PROJECT_NAME:$CIRCLE_SHA1 ./bin/publish
workflows:
  version: 2
  build_test_publish:
    jobs:
      - secrets_scan_patterns
      - secrets_scan_entropy
      - env:
          filters:
            tags:
              only: /^v(\d+\.){1,}\d+/
      - build:
          requires:
            - env
          filters:
            tags:
              only: /^v(\d+\.){1,}\d+/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v(\d+\.){1,}\d+/
      - tag:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - publish:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v(\d+\.){1,}\d+/
